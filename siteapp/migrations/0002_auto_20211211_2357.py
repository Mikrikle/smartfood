# Generated by Django 3.2.9 on 2021-12-11 20:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('siteapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Категория')),
                ('description', models.TextField(verbose_name='Описание')),
                ('url', models.SlugField(max_length=160, unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории еды',
            },
        ),
        migrations.CreateModel(
            name='FoodInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('weight', models.PositiveIntegerField(default=100, verbose_name='Вес (г)')),
            ],
            options={
                'verbose_name': 'Персональная информация о еде',
                'verbose_name_plural': 'Персональная информация о еде',
            },
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('visionname', models.CharField(blank=True, max_length=150, verbose_name='Обозначение в CustomVision')),
                ('isIngredient', models.BooleanField(verbose_name='Явлеяется ингредиентом')),
                ('isEatable', models.BooleanField(verbose_name='Готов к употреблению')),
                ('img', models.ImageField(upload_to='img/dishes/', verbose_name='Изображение')),
                ('url', models.SlugField(max_length=160, unique=True)),
                ('calories', models.PositiveIntegerField(default=10, verbose_name='Калории')),
                ('fats', models.FloatField(default=0, verbose_name='Жиры (г)')),
                ('carbohydrates', models.FloatField(default=0, verbose_name='Углеводы (г)')),
                ('proteins', models.FloatField(default=0, verbose_name='Белки (г)')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='siteapp.foodcategory', verbose_name='Категория')),
                ('ingredients', models.ManyToManyField(blank=True, related_name='_siteapp_fooditem_ingredients_+', to='siteapp.FoodItem', verbose_name='Ингредиенты')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Список блюд',
                'ordering': ['name'],
            },
        ),
        migrations.RemoveField(
            model_name='dishitem',
            name='ingredients',
        ),
        migrations.RemoveField(
            model_name='ingredientinfo',
            name='food',
        ),
        migrations.RemoveField(
            model_name='ingredientinfo',
            name='owner',
        ),
        migrations.DeleteModel(
            name='DishInfo',
        ),
        migrations.DeleteModel(
            name='DishItem',
        ),
        migrations.DeleteModel(
            name='IngredientInfo',
        ),
        migrations.DeleteModel(
            name='IngredientItem',
        ),
        migrations.AddField(
            model_name='foodinfo',
            name='food',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='siteapp.fooditem', verbose_name='Еда'),
        ),
        migrations.AddField(
            model_name='foodinfo',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
